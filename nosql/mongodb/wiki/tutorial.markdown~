# Quickstart

* [Quickstart OS X](http://www.mongodb.org/display/DOCS/Quickstart+OS+X)
* [Quickstart Unix](http://www.mongodb.org/display/DOCS/Quickstart+Unix)
* [Quickstart Windows](http://www.mongodb.org/display/DOCS/Quickstart+Windows)

NOTICE: For an even quicker start go to [http://try.mongodb.org/](http://try.mongodb.org/)

## Installation Guides

Consider the [installation guides from the MongoDB Manual]:

* [Install MongoDB on RedHat Enterprise Linux, CentOS, or Fedora Linux](http://docs.mongodb.org/master/tutorial/install-mongodb-on-redhat-centos-or-fedora-linux/)
* [Install MongoDB on Debian, Ubuntu or other Linux Systems](http://docs.mongodb.org/master/tutorial/install-mongodb-on-debian-or-ubuntu-linux/)
* [Install MongoDB on other Unix/Linux Systems](http://docs.mongodb.org/master/tutorial/install-mongodb-on-linux/)
* [Install MongoDB on OS X](http://docs.mongodb.org/master/tutorial/install-mongodb-on-os-x/)

## See Also

* [SQL to Mongo Mapping Chart](http://www.mongodb.org/display/DOCS/SQL+to+Mongo+Mapping+Chart)
* [Tutorial](http://www.mongodb.org/display/DOCS/Tutorial)
* [Tutorials in the MongoDB Manual](http://docs.mongodb.org/manual/applications/#tutorials)
* The [MongoDB Manual](http://docs.mongodb.org/manual)

# Quickstart Unix

Consider one of the following installation tutorials from the new Manual for more specific instructions for getting started with MongoDB.

* [Install MongoDB on RedHat Enterprise Linux, CentOS, or Fedora Linux](http://docs.mongodb.org/master/tutorial/install-mongodb-on-redhat-centos-or-fedora-linux/)
* [Install MongoDB on Debian, Ubuntu or other Linux Systems](http://docs.mongodb.org/master/tutorial/install-mongodb-on-debian-or-ubuntu-linux/)
* [Install MongoDB on other Unix/Linux Systems](http://docs.mongodb.org/master/tutorial/install-mongodb-on-linux/)
* [Install MongoDB on OS X](http://docs.mongodb.org/master/tutorial/install-mongodb-on-os-x/)

Alternately, you may continue reading this document for installation instructions.

## Download

NOTICE: If you are running an old version of Linux and the database doesn't start, or gives a floating point exception, try the "legacy static" version on the [Downloads](http://www.mongodb.org/display/DOCS/Downloads) page instead of the versions listed below.

### Via package manager

Ubuntu and Debian users can now install nightly snapshots via apt. See [Ubuntu and Debian packages](http://www.mongodb.org/display/DOCS/Ubuntu+and+Debian+packages) for details.

CentOS and Fedora users should head to the [CentOS and Fedora Packages](http://www.mongodb.org/display/DOCS/CentOS+and+Fedora+Packages) page.

#### 32-bit Linux binaries
Note: 64 bit is recommended.

<pre>
<shell>
$ # replace "1.6.4" in the url below with the version you want
$ curl http://downloads.mongodb.org/linux/mongodb-linux-i686-1.6.4.tgz > mongo.tgz
$ tar xzf mongo.tgz
</shell>
</pre>

#### 64-bit Linux binaries

<pre>
<shell>
$ # replace "1.6.4" in the url below with the version you want
$ curl http://downloads.mongodb.org/linux/mongodb-linux-x86_64-1.6.4.tgz > mongo.tgz
$ tar xzf mongo.tgz
</shell>
</pre>

#### Other Unixes

See the [Downloads](http://www.mongodb.org/display/DOCS/Downloads) page for some binaries, and also the Building page for information on [building](http://www.mongodb.org/display/DOCS/Building) from source.

## Create a data directory

By default MongoDB will store data in /data/db, but it won't automatically create that directory. To create it, do:

  ```shell
  $ sudo mkdir -p /data/db/
  $ sudo chown `id -u` /data/db
  ```

You can also tell MongoDB to use a different data directory, with the --dbpath option.

## Run and connect to the server

First, start the MongoDB server in one terminal:

  ```shell
  $ ./mongodb-xxxxxxx/bin/mongod
  ```

In a separate terminal, start the shell, which will connect to localhost by default:

<pre>
<shell>
$ ./mongodb-xxxxxxx/bin/mongo
> db.foo.save( { a : 1 } )
> db.foo.find()
</shell>
</pre>

Congratulations, you've just saved and retrieved your first document with MongoDB!

# Tutorial

* [Running MongoDB](http://www.mongodb.org/display/DOCS/Tutorial#Tutorial-RunningMongoDB)
* [Getting A Database Connection](http://www.mongodb.org/display/DOCS/Tutorial#Tutorial-GettingADatabaseConnection)
* [Dynamic Schema ("Schema Free")](http://www.mongodb.org/display/DOCS/Tutorial#Tutorial-DynamicSchema%28%22SchemaFree%22%29)
* [Inserting Data into A Collection](http://www.mongodb.org/display/DOCS/Tutorial#Tutorial-InsertingDataintoACollection)
* [Accessing Data From a Query](http://www.mongodb.org/display/DOCS/Tutorial#Tutorial-AccessingDataFromaQuery)
* [Specifying What the Query Returns](http://www.mongodb.org/display/DOCS/Tutorial#Tutorial-SpecifyingWhattheQueryReturns)
* [findOne() - Syntactic Sugar](http://www.mongodb.org/display/DOCS/Tutorial#Tutorial-%7B%7BfindOne%28%29%7D%7D%5CSyntacticSugar)
* [Limiting the Result Set via limit()](http://www.mongodb.org/display/DOCS/Tutorial#Tutorial-LimitingtheResultSetvia%7B%7Blimit%28%29%7D%7D)
* [More Help](http://www.mongodb.org/display/DOCS/Tutorial#Tutorial-MoreHelp)
* [What Next](http://www.mongodb.org/display/DOCS/Tutorial#Tutorial-WhatNext)

## Running MongoDB

First, run through the [Quickstart](http://www.mongodb.org/display/DOCS/Quickstart) guide for your platform to get Mongo installed.

## Getting A Database Connection

Let's now try manipulating the database with the database [shell](http://www.mongodb.org/display/DOCS/mongo+-+The+Interactive+Shell) . (We could perform similar operations from any programming language using an appropriate [driver](http://www.mongodb.org/display/DOCS/Drivers).  The shell is convenient for interactive and administrative use.)

Start the MongoDB JavaScript shell with:

<pre>
<shell>
# 'mongo' is shell binary. exact location might vary depending on
# installation method and platform
$ bin/mongo
# on Ubuntu 12.04
$ mongo
MongoDB shell version: 2.0.4
connecting to: test
</shell>
</pre>

By default the shell connects to database "test" on localhost.  You then see:

<pre>
<shell>
MongoDB shell version: <whatever>
url: test
connecting to: test
type "help" for help
>
</shell>
</pre>

"connecting to:" tells you the name of the database the shell is using. To switch databases, type:

<pre>
<shell>
> use mydb
switched to db mydb
</shell>
</pre>

**Switching to a database with the `use` command won't immediately create the database - the database is created lazily the first time data is inserted. This means that if you use a database for the first time it won't show up in the list provided by `show dbs` until data is inserted.

To see a list of handy commands, type help.

TIP: **Tip for Developers with Experience in Other Databases**
You may notice, in the examples below, that we never create a database or collection. MongoDB does not require that you do so. As soon as you insert something, MongoDB creates the underlying collection and database. If you query a collection that does not exist, MongoDB treats it as an empty collection.

## Dynamic Schema ("Schema Free")

MongoDB has databases, collections, and indexes much like a traditional RDBMS(__relational database management system__). In some cases (databases and collections) these objects can be implicitly created, however once created they exist in a system catalog (db.systems.collections, db.system.indexes).

Collections contain ([BSON](http://www.mongodb.org/display/DOCS/BSON)) documents. Within these documents are fields. In MongoDB there is no predefinition of fields (what would be columns in an RDBMS). There is no schema for fields within documents – the fields and their value datatypes can vary 变化. Thus there is no notion 概念 of an "alter 更 table" operation which adds a "column". In practice, it is highly common for a collection to have a homogenous 均匀的 structure across documents; however this is not a requirement. **This flexibility means that schema migration and augmentation 扩充 are very easy in practice** - rarely 很少 will you need to write scripts which perform "alter table" type operations. In addition to making schema migration flexible, this facility makes iterative 迭代 software development atop the database easier.
